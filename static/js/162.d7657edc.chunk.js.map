{"version":3,"file":"static/js/162.d7657edc.chunk.js","mappings":"sWAgBe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KAMMC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,cAAcC,MAC1B,IAAK,QACHV,EAASQ,EAAMC,cAAcE,OAC7B,MAEF,IAAK,WACHT,EAAYM,EAAMC,cAAcE,OAChC,MAEF,QACE,OAEL,EAYD,OACE,UAAC,IAAD,CAAKC,GAAI,CAAEC,MAAO,OAAQC,UAAW,UAArC,WACE,oCACA,kBAAMC,SAZW,SAAAP,GACnBA,EAAMQ,iBACFb,GACFc,EAAAA,EAAAA,IAAM,CACJlB,MAAAA,EAAOE,SAAAA,IAGZ,EAKG,WACE,SAAC,IAAD,CACEiB,SAAUX,EACVY,MAAM,QACNT,KAAK,QACLU,GAAG,4BACHR,GAAI,CAAES,EAAG,EAAGR,MAAO,QACnBS,WAAY,CACVC,gBACE,SAAC,IAAD,CAAgBC,SAAS,QAAzB,UACE,SAAC,IAAD,UAKR,UAAC,IAAD,CAAaZ,GAAI,CAAES,EAAG,EAAGR,MAAO,QAAUY,QAAQ,WAAlD,WACE,SAAC,IAAD,CAAYC,QAAQ,8BAApB,uBAGA,SAAC,IAAD,CACEhB,KAAK,WACLQ,SAAUX,EACVa,GAAG,8BACHO,KAAMtB,EAAe,OAAS,WAC9BkB,gBACE,SAAC,IAAD,CAAgBC,SAAS,QAAzB,UACE,SAAC,IAAD,MAGJI,cACE,SAAC,IAAD,CAAgBJ,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXK,QAlEgB,kBAAMvB,GAAgB,SAAAwB,GAAI,OAAKA,CAAL,GAA1B,EAmEhBC,YAlEgB,SAAAvB,GAC9BA,EAAMQ,gBACP,EAiEegB,KAAK,MAJP,SAMG3B,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,QAI1Cc,MAAM,iBAKR,SAAC,IAAD,CAAQM,QAAQ,WAAWE,KAAK,SAAhC,yBAOT,C","sources":["pages/Login/Login.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operatons';\nimport { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport MailIcon from '@mui/icons-material/Mail';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport KeyIcon from '@mui/icons-material/Key';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nexport default function Login() {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'email':\n        setEmail(event.currentTarget.value);\n        break;\n\n      case 'password':\n        setPassword(event.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n        dispatch(\n      login({\n        email, password\n      })\n    );\n  };\n\n  return (\n    <Box sx={{ width: '100%', textAlign: 'center' }}>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          onChange={handleChange}\n          label=\"Email\"\n          name=\"email\"\n          id=\"outlined-start-adornment2\"\n          sx={{ m: 1, width: '100%' }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MailIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-password\">\n            Password\n          </InputLabel>\n          <OutlinedInput\n            name=\"password\"\n            onChange={handleChange}\n            id=\"outlined-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <KeyIcon />\n              </InputAdornment>\n            }\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label=\"Password\"\n          />\n        </FormControl>\n\n\n          <Button variant=\"outlined\" type=\"submit\">\n            Log in\n          </Button>\n\n      </form>\n    </Box>\n  );\n};\n"],"names":["Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","showPassword","setShowPassword","handleChange","event","currentTarget","name","value","sx","width","textAlign","onSubmit","preventDefault","login","onChange","label","id","m","InputProps","startAdornment","position","variant","htmlFor","type","endAdornment","onClick","show","onMouseDown","edge"],"sourceRoot":""}